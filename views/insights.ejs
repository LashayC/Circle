<!DOCTYPE HTML>
<!--
	Phantom by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html>
	<head>
		<title>Circle</title>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
		<link rel="stylesheet" href="assets/css/main.css" />
		<link rel="stylesheet" href="assets/css/charts.css" />
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
		<noscript><link rel="stylesheet" href="assets/css/noscript.css" /></noscript>

        <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.8.0/chart.min.js"></script> -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css">
        <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"> -->
	</head>
	<body class="is-preload">

		
		<!-- Wrapper -->
			<div id="wrapper">

				<!-- Header -->
					<header id="header">
						<div class="inner">

							<!-- Logo -->
								<a href="/home" class="logo">
									<span class="symbol"><img src="img/logo.svg" alt="" /></span><span class="title">Circle</span>
								</a>

							<!-- Nav -->
								<nav>
									<ul>
										<li><a href="#menu">Menu</a></li>
									</ul>
								</nav>

						</div>
					</header>

				<!-- Menu -->
					<nav id="menu">
						<h2>Menu</h2>
						<ul>
							<li><a href="/home">Home</a></li>
							<li><a href="/medication">Medication</a></li>
							<li><a href="/moodLog">Mood Log</a></li>
							<li><a href="/profile">Profile</a></li>
							<li><a href="/appointments">Appointments</a></li>
							<li><a href="/insights">Insights</a></li>
							<li><a href="/logout">Logout</a></li>
							<li><a href="/checkin">Check-in</a></li>
			
							<!-- <li><a href="generic.html">Consequat dolor</a></li>
							<li><a href="elements.html">Elements</a></li>
						</ul> -->
					</nav>

				<!-- Main -->
					<div id="main">
						<div class="inner">
							<header>
								<h1 class="pgHead">Insights</h1>
								<!-- <h2 class="pgSub">Here for your health.</h2>
								<p>Circle was made to help you take control of your health. No more forgotten scraps of paper and missed meds. No more frantic phone calls for late notices. Circle aims to make the process of you taking care of you simple.</p> -->
							</header>
							<section class="tiles">
								<!-- <article class="style1">
									<span class="image">
										<img src="img/pic01.jpg" alt="" />
									</span>
									<a href="/medication">
										<h2>Medication</h2>
										<div class="content">
											<p>Track your medications here</p>
										</div>
									</a>
								</article>
								<article class="style2">
									<span class="image">
										<img src="img/pic02.jpg" alt="" />
									</span>
									<a href="/moodLog">
										<h2>Mood Log</h2>
										<div class="content">
											<p>Track your mood and any changes.</p>
										</div>
									</a>
								</article> -->
								<ul>
								<li>You've taken your medications <%= medStreak %> out of 7 days this week.</li>
								<li>Average mood this week: <%= averageMood %></li>
								<li>Todays meds are: <%= todaysMeds%> </li>
                            	</ul>					
							</section>
						</div>
					</div>

		
			</div>


			
		
		<div class="box alt">
		<div class="row gtr-uniform">
			<div class="col-6" >
		<div class="container">
			<canvas id="myChart"></canvas>
		</div>
	</div>
		<script>
			const labels = [
				'Sun',
				'Mon',
				'Tues',
				'Wed',
				'Thurs',
				'Fri',
				'Sat'
				
                ];
              
                const data = {
                  labels: labels,
                  datasets: [{
                    label: 'Mood this Week',
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    data: [<%= moodData %>],
                  }]
                };
              
                const config = {
                  type: 'line',
                  data: data,
                  options: {
					scales: {
            y: {
                beginAtZero: true,
				ticks: {
					callback: function(value, index){
						// console.log(index)
						let mood = ['Amazing', 'Good', 'Okay', 'Poor', 'Terrible']
						// console.log(value)
						switch(value){
							case 0:
								return 'Terrible'
							break
							case 1:
								return 'Poor'
							break
							case 2:
								return 'Okay'
							break
							case 3:
								return 'Good'
							break
							case 4:
								return 'Amazing'
							break
							default:
								//console.log(index)
								return undefined
						}
					
					}
				}
            }
        }
				  }
                };
             
                    const myChart = new Chart(
                    document.getElementById('myChart'),
                    config
                    );
                </script>


<!-- <script src="path/to/chartjs/dist/chart.js"></script>
<script>
    const myChart1 = new Chart(ctx, {...});
</script> -->

<!-- Next Chart Setup Start -->

<!-- 1. Instantiate the Chart class. Pass in node/jQuery instance/ or 2D contect of canvas where chart will be drawn. -->
<div class="col-6" >
<div class="container">
<canvas id="sleepChart" ></canvas></div>
</div>
<script>
	const ctx = document.getElementById('sleepChart')
	/* Can also be written:
	const ctx = document.getElementById('myChart');
	const ctx = $('#myChart');
	const ctx = 'myChart'; */

	// 2. Instantiate a predefined chart type or create own. Below is bar graph

	const myChart1 = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: [<%= sleepDates %>] ,
        datasets: [{
            label: 'Sleep this Month',
            data: [<%= sleepHours %>],
            backgroundColor: [
                // 'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)'
                // 'rgba(255, 206, 86, 0.2)',
                // 'rgba(75, 192, 192, 0.2)',
                // 'rgba(153, 102, 255, 0.2)',
                // 'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                // 'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)'
                // 'rgba(255, 206, 86, 1)',
                // 'rgba(75, 192, 192, 1)',
                // 'rgba(153, 102, 255, 1)',
                // 'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
		responsive: true,
        scales: {
			x: {
        display: true,
        title: {
          display: true,
          text: '<%= monthLabel %>',
        //   color: '#911',
        //   font: {
        //     family: 'Comic Sans MS',
        //     size: 20,
        //     weight: 'bold',
        //     lineHeight: 1.2,
        //   },
          padding: {top: 0, left: 0, right: 0, bottom: 0}
        }
      },
            y: {
                beginAtZero: true,
				dispplay:true,
				title:{
					display:true, 
					text: 'Hours of Sleep',
          			//color: '#191',
					// font: {
					// 	family: 'Times', 
					// 	size: 20,
					// 	style: 'normal',
					// 	lineHeight: 1.2
					// },
					padding: {top: 30, left: 0, right: 0, bottom: 0}
				}
				
            }
        }
    }
});


</script>

<!-- Stress bar chart -->
<div class="col-6" >
<div class="container">
	<canvas id="stressChart" ></canvas>
</div>
</div>
<script>
	
	
	
	// const DATA_COUNT = 7;
	// const NUMBER_CFG = {count: DATA_COUNT, min: -2, max: 2};

	// const labels =[1, 2, -1, 0, 0, -2, -1];
	const stressData = {
		labels: ['Sun',
				'Mon',
				'Tues',
				'Wed',
				'Thurs',
				'Fri',
				'Sat'],
				datasets: [
					{
						label: 'Stress',
						data: [1, 2, -1, 1, 0, -2, -1],
						borderColor: 'rgba(75, 192, 192, 1)',
      backgroundColor: 'rgba(75, 192, 192, 0.5)',
      borderWidth: 2,
      borderRadius: Number.MAX_VALUE,
      borderSkipped: false,
    },
	
]
};

const stressConfig = {
type: 'bar',
data: stressData,
options: {
	responsive: true,
	plugins: {
		legend: {
	position: 'top',
  },
  title: {
	  display: true,
	  text: 'Stress this Week'
	}
},
scales: {
            y: {
                beginAtZero: true,
				ticks: {
					callback: function(value, index){
						// console.log(index)
						let mood = ['Amazing', 'Good', 'Okay', 'Poor', 'Terrible']
						// console.log(value)
						switch(value){
							case 2:
								return 'Very High'
							break
							case 1:
								return 'High'
							break
							case 0:
								return 'Mid'
							break
							case -1:
								return 'Low'
							break
							case -2:
								return 'Very Low'
							break
							default:
								//console.log(index)
								return undefined
						}
					
					}
				}
            }
        }
},
};



const stressChart = new Chart(
document.getElementById('stressChart'),
stressConfig
);
</script>



<!-- Energy Chart -->
<div class="col-6" >
<div class="container">
	<canvas id="energyChart" ></canvas>
</div>
</div>
<script>
	
	
	
	const DATA_COUNT = 7;
	const NUMBER_CFG = {count: DATA_COUNT, min: -2, max: 2};

	// const labels =[1, 2, -1, 0, 0, -2, -1];
	const energyData = {
		labels: ['Sun',
				'Mon',
				'Tues',
				'Wed',
				'Thurs',
				'Fri',
				'Sat'],
				datasets: [
					{
						label: 'Energy',
						data: [-2, -1, 2, 0, -1, 2, -1],
						borderColor: 'rgba(255, 159, 64, 1)',
      backgroundColor: 'rgba(255, 159, 64, 0.5)',
      borderWidth: 2,
      borderRadius: Number.MAX_VALUE,
      borderSkipped: false,
    },
	
]
};

const energyConfig = {
type: 'bar',
data: energyData,
options: {
	responsive: true,
	plugins: {
		legend: {
	position: 'top',
  },
  title: {
	  display: true,
	  text: 'Energy this Week'
	}
},
scales: {
            y: {
                beginAtZero: true,
				ticks: {
					callback: function(value, index){
						// console.log(index)
						let mood = ['Amazing', 'Good', 'Okay', 'Poor', 'Terrible']
						// console.log(value)
						switch(value){
							case 2:
								return 'Very High'
							break
							case 1:
								return 'High'
							break
							case 0:
								return 'Mid'
							break
							case -1:
								return 'Low'
							break
							case -2:
								return 'Very Low'
							break
							default:
								//console.log(index)
								return undefined
						}
					
					}
				}
            }
        }
},
};



const energyChart = new Chart(
document.getElementById('energyChart'),
energyConfig
);
</script>

</div>





<!-- //<p>Average Mood this Week: okay</p> -->
</div>
<!-- <div class="col-12"><span class="image fit"><img src="img/pic13.jpg" alt="" /></span></div> -->
<!-- <div class="col-4"><span class="image fit"><img src="img/pic01.jpg" alt="" /></span></div> -->
<div class="row gtr-uniform">
	<div class="col-12">
	<h4>What you did this week:</h4>
	</div>

	<% for(let i=0; i<moodLog.length; i++) {%>
		<div class="col-4" >
			
			<section class="renderSections"  >
			
				<p>Date: <%= moodLog[i].date %></p>
				<p>Mood: Mood <%= moodLog[i].mood[0] %></p>
				<p>Activities: </p>
					<ul>

						<% for(let i=0; i<moodLog[i].activities[0].length; i++) {%>
							<li><%= moodLog[i].activities[0][i] %></li>

							<% } %>
		
				</ul>
				<p>Log: </p>
				<p><%= moodLog[i].moodNotes %></p>

			
				
				
			</section>
		
			
			</div>
		<% } %>

		</div>

		</div>





<!-- nEXT Practice Chart -->
<!-- <div class="container">
	<canvas id="myChart2"></canvas></div>

<script>
	
	const myChart2 = new Chart(
	document.getElementById('myChart2'),
	config
	);
const money = [{x: 'Jan', net: 100, cogs: 50, gm: 50}, {x: 'Feb', net: 120, cogs: 55, gm: 75}];
const cfg = {
    type: 'bar',
    data: {
        labels: ['Jan', 'Feb'],
        datasets: [{
            label: 'Net sales',
            data: money,
            parsing: {
                yAxisKey: 'net'
            }
        }, {
            label: 'Cost of goods sold',
            data: data,
            parsing: {
                yAxisKey: 'cogs'
            }
        }, {
            label: 'Gross margin',
            data: data,
            parsing: {
                yAxisKey: 'gm'
            }
        }]
    },
}; -->
 

</script>               

		<!-- Scripts -->
			<script src="assets/js/jquery.min.js"></script>
			<script src="assets/js/browser.min.js"></script>
			<script src="assets/js/breakpoints.min.js"></script>
			<script src="assets/js/util.js"></script>
			<script src="assets/js/main.js"></script>
            <!-- <script src="chart.js"></script> -->
			<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
			<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
			<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

	</body>
</html>