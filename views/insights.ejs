<!DOCTYPE HTML>
<!--
	Phantom by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html>
	<head>
		<title>Circle</title>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
		<link rel="stylesheet" href="assets/css/main.css" />
		<link rel="stylesheet" href="assets/css/charts.css" />
		<noscript><link rel="stylesheet" href="assets/css/noscript.css" /></noscript>

        <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.8.0/chart.min.js"></script> -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css">
        <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"> -->
	</head>
	<body class="is-preload">

		
		<!-- Wrapper -->
			<div id="wrapper">

				<!-- Header -->
					<header id="header">
						<div class="inner">

							<!-- Logo -->
								<a href="/home" class="logo">
									<span class="symbol"><img src="img/logo.svg" alt="" /></span><span class="title">Circle</span>
								</a>

							<!-- Nav -->
								<nav>
									<ul>
										<li><a href="#menu">Menu</a></li>
									</ul>
								</nav>

						</div>
					</header>

				<!-- Menu -->
					<nav id="menu">
						<h2>Menu</h2>
						<ul>
							<li><a href="/home">Home</a></li>
							<li><a href="/medication">Medication</a></li>
							<li><a href="/moodLog">Mood Log</a></li>
							<li><a href="/profile">Profile</a></li>
							<li><a href="/appointments">Appointments</a></li>
							<li><a href="/insights">Insights</a></li>
							<li><a href="/logout">Logout</a></li>

							<!-- <li><a href="generic.html">Consequat dolor</a></li>
							<li><a href="elements.html">Elements</a></li>
						</ul> -->
					</nav>

				<!-- Main -->
					<div id="main">
						<div class="inner">
							<header>
								<h1 class="pgHead">Insights</h1>
								<!-- <h2 class="pgSub">Here for your health.</h2>
								<p>Circle was made to help you take control of your health. No more forgotten scraps of paper and missed meds. No more frantic phone calls for late notices. Circle aims to make the process of you taking care of you simple.</p> -->
							</header>
							<section class="tiles">
								<!-- <article class="style1">
									<span class="image">
										<img src="img/pic01.jpg" alt="" />
									</span>
									<a href="/medication">
										<h2>Medication</h2>
										<div class="content">
											<p>Track your medications here</p>
										</div>
									</a>
								</article>
								<article class="style2">
									<span class="image">
										<img src="img/pic02.jpg" alt="" />
									</span>
									<a href="/moodLog">
										<h2>Mood Log</h2>
										<div class="content">
											<p>Track your mood and any changes.</p>
										</div>
									</a>
								</article> -->
								
                            						
							</section>
						</div>
					</div>

		
			</div>


			
			
            <!-- <script>
            let myChart = document.getElementById('myChart').getContext('2D')
			
            let whatEverNameChart = new Chart(myChart, {
				type:'bar', //In this you can have bar, horiztonalBar, pie, line, doughnut, radar, plarArea
                data:{
                    labels:['Boston', 'Worcester', 'Springfield', 'Lowell', 'Cambridge', 'New Bedford'],
                    datasets:[{
                        label:'Population',
                        data:[
                            617594,
                            181045,
                            106519,
                            105162,
                            95072
                        ]
                    }] //can have more than one of these.
                },
                options:{}
            })
		</script> -->
		<div class="container">
			<canvas id="myChart"></canvas>
		</div>
		<script>
			const labels = [
				'Mon',
				'Tues',
				'Wed',
				'Thurs',
				'Fri',
				'Sat',
				'Sun'
                ];
              
                const data = {
                  labels: labels,
                  datasets: [{
                    label: 'Mood',
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    data: [0, 4, 5, 2, 3, 2, 5],
                  }]
                };
              
                const config = {
                  type: 'line',
                  data: data,
                  options: {
					scales: {
            y: {
                beginAtZero: true,
				ticks: {
					callback: function(value, index){
						// console.log(index)
						let mood = ['Amazing', 'Good', 'Okay', 'Poor', 'Terrible']
						// console.log(value)
						switch(index){
							case 2:
								return 'Terrible'
							break
							case 4:
								return 'Poor'
							break
							case 6:
								return 'Okay'
							break
							case 8:
								return 'Good'
							break
							case 10:
								return 'Amazing'
							break
							default:
								//console.log(index)
								return undefined
						}
					
					}
				}
            }
        }
				  }
                };
              </script>

                <script>
                    const myChart = new Chart(
                    document.getElementById('myChart'),
                    config
                    );
                </script>


<!-- <script src="path/to/chartjs/dist/chart.js"></script>
<script>
    const myChart1 = new Chart(ctx, {...});
</script> -->

<!-- Next Chart Setup Start -->

<!-- 1. Instantiate the Chart class. Pass in node/jQuery instance/ or 2D contect of canvas where chart will be drawn. -->
<div class="container">
<canvas id="myChart1" ></canvas></div>
<script>
	const ctx = document.getElementById('myChart1')
	/* Can also be written:
	const ctx = document.getElementById('myChart');
	const ctx = $('#myChart');
	const ctx = 'myChart'; */

	// 2. Instantiate a predefined chart type or create own. Below is bar graph

	const myChart1 = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: [<%= daysInMonth %>] ,
        datasets: [{
            label: 'Sleep',
            data: [2, 1, 5, 5, 5, 8, 2],
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            y: {
                beginAtZero: true,
				// ticks: {
				// 	callback: function(value, index){
				// 		console.log( 'value:', value = index)
				// 	// if(value % 2 == 0){
				// 	// 	return ''
				// 	// }

				// 	// if(index == value){
				// 	// 	return index = value
				// 	// }
						
						
					
				// 	}
				// }
            }
        }
    }
});


</script>

<h4>What you did this week:</h4>

<p>Average Mood this Week: okay</p>

<section class="row">
	<section class="col-sm-4 plantBoxes">
	
		
		
	</section>
	<% for(let i=0; i<moodLog.length; i++) {%>
		<section class="col-sm-4 " id="<%=moodLog[i]._id%>">
			<section >
				<h3>
					
				</h3>
				<ul>
					<li><%= moodLog[i].activities[0] %></li>
				<li><%= moodLog[i].activities[1] %></li>
				<li><%= moodLog[i].activities[2] %></li>
				
			</ul>
			</section>

		</section>
		<% } %>




</section>

		





<!-- nEXT Practice Chart -->
<!-- <div class="container">
	<canvas id="myChart2"></canvas></div>

<script>
	
	const myChart2 = new Chart(
	document.getElementById('myChart2'),
	config
	);
const money = [{x: 'Jan', net: 100, cogs: 50, gm: 50}, {x: 'Feb', net: 120, cogs: 55, gm: 75}];
const cfg = {
    type: 'bar',
    data: {
        labels: ['Jan', 'Feb'],
        datasets: [{
            label: 'Net sales',
            data: money,
            parsing: {
                yAxisKey: 'net'
            }
        }, {
            label: 'Cost of goods sold',
            data: data,
            parsing: {
                yAxisKey: 'cogs'
            }
        }, {
            label: 'Gross margin',
            data: data,
            parsing: {
                yAxisKey: 'gm'
            }
        }]
    },
}; -->
 

</script>               

		<!-- Scripts -->
			<script src="assets/js/jquery.min.js"></script>
			<script src="assets/js/browser.min.js"></script>
			<script src="assets/js/breakpoints.min.js"></script>
			<script src="assets/js/util.js"></script>
			<script src="assets/js/main.js"></script>
            <!-- <script src="chart.js"></script> -->

	</body>
</html>